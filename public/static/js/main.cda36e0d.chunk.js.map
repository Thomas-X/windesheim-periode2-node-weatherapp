{"version":3,"sources":["CurrentWeather.js","App.js","serviceWorker.js","index.js"],"names":["CurrentWeather","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loaded","data","currentMonth","currentYear","historyData","historyDataLoaded","months","name","count","years","getData","asyncToGenerator","regenerator_default","a","mark","_callee","_this$props","country","city","wrap","_context","prev","next","axios","get","concat","code","toLowerCase","sent","setState","stop","checkIfShouldUpdate","_callee2","_this$state","_this$props2","_context2","onYearChange","e","target","value","onMonthChange","arr","i","Date","getFullYear","push","slice","then","console","log","_this2","_this$props3","_this$state2","react_default","createElement","className","avgTemperature","minTemperature","maxTemperature","onChange","disabled","selected","map","val","idx","key","scope","min","avg","max","Component","App","selectedCountry","selectedCity","countries","onCountryChange","_","omit","filter","index","onCityChange","catch","err","error","cities","length","Fragment","src_CurrentWeather","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iSAkMeA,cAlId,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA7DPQ,MAAQ,CACPC,OAAQ,KACRC,KAAM,KACNC,aAAc,KACdC,YAAa,KACbC,YAAa,KACbC,kBAAmB,KACnBC,OAAQ,CACP,CACCC,KAAM,UACNC,MAAO,MAER,CACCD,KAAM,WACNC,MAAO,MAER,CACCD,KAAM,QACNC,MAAO,MAER,CACCD,KAAM,QACNC,MAAO,MAER,CACCD,KAAM,MACNC,MAAO,MAER,CACCD,KAAM,OACNC,MAAO,MAER,CACCD,KAAM,OACNC,MAAO,MAER,CACCD,KAAM,SACNC,MAAO,MAER,CACCD,KAAM,YACNC,MAAO,MAER,CACCD,KAAM,UACNC,MAAO,MAER,CACCD,KAAM,WACNC,MAAO,MAER,CACCD,KAAM,WACNC,MAAO,OAGTC,MAAO,IAGWjB,EASnBkB,QATmBjB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAC,EAAAC,KAST,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAjB,EAAA,OAAAW,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAN,EACexB,EAAKD,MAAtB0B,EADED,EACFC,QAASC,EADPF,EACOE,KADPE,EAAAE,KAAA,EAEWC,IAAMC,IAAN,mBAAAC,OAA6BR,EAAQS,KAAKC,cAA1C,KAAAF,OAA2DP,EAAKS,gBAF3E,OAEH1B,EAFGmB,EAAAQ,KAE6F3B,KACtGT,EAAKqC,SAAS,CACb5B,OACAD,QAAQ,IALA,wBAAAoB,EAAAU,SAAAf,EAAApB,SATSH,EAmBnBuC,oBAnBmBtC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAC,EAAAC,KAmBG,SAAAkB,IAAA,IAAAC,EAAA9B,EAAAD,EAAAgC,EAAAhB,EAAAD,EAAAhB,EAAA,OAAAW,EAAAC,EAAAM,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAAAW,EACezC,EAAKO,MAAlCI,EADc8B,EACd9B,YAAaD,EADC+B,EACD/B,aADCgC,EAEG1C,EAAKD,MAAtB2B,EAFcgB,EAEdhB,KAAMD,EAFQiB,EAERjB,SACTf,IAAgBC,EAHC,CAAAgC,EAAAb,KAAA,eAIpB9B,EAAKqC,SAAS,CACbxB,kBAAmB,YALA8B,EAAAb,KAAA,EAOAC,IAAMC,IAAN,mBAAAC,OAA6BR,EAAQS,KAAKC,cAA1C,KAAAF,OAA2DP,EAAKS,cAAhE,KAAAF,OAAiFtB,EAAjF,KAAAsB,OAAgGvB,IAPhG,OAOdD,EAPckC,EAAAP,KAOiH3B,KACrIT,EAAKqC,SAAS,CACbzB,YAAaH,EACbI,kBAAmB,WAVA,wBAAA8B,EAAAL,SAAAE,EAAArC,SAnBHH,EAkCnB4C,aAAe,SAACC,GACf7C,EAAKqC,SAAS,CACb1B,YAAakC,EAAEC,OAAOC,OACpB,WACF/C,EAAKuC,yBAtCYvC,EA0CnBgD,cAAgB,SAACH,GAChB7C,EAAKqC,SAAS,CACb3B,aAAcmC,EAAEC,OAAOC,OACrB,WACF/C,EAAKuC,yBA3CN,IADA,IAAMU,EAAM,GACHC,EAAI,KAAMA,GAAK,IAAIC,MAAQC,cAAgB,EAAEF,IACrDD,EAAII,KAAKH,GAJQ,OAMlBlD,EAAKO,MAAMU,MAAQgC,EAAIK,MAAM,GANXtD,mFAmDlBG,KAAKe,UACHqC,KAAK,kBAAMC,QAAQC,IAAI,+CAGjB,IAAAC,EAAAvD,KAAAwD,EACgBxD,KAAKJ,MAAtB2B,EADCiC,EACDjC,KAAMD,EADLkC,EACKlC,QADLmC,EAEyFzD,KAAKI,MAA/FC,EAFCoD,EAEDpD,OAAQC,EAFPmD,EAEOnD,KAAiCQ,GAFxC2C,EAEalD,aAFbkD,EAE2BjD,YAF3BiD,EAEwC3C,OAAOH,EAF/C8C,EAE+C9C,OAAQF,EAFvDgD,EAEuDhD,YAAaC,EAFpE+C,EAEoE/C,kBAE5E,OAAKL,EAKJqD,EAAAxC,EAAAyC,cAAA,OAAKC,UAAW,QACfF,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,aACdF,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,aACZtD,EAAKuD,eADP,WACgCvC,EAAQA,QAAQV,KADhD,KACwDW,GAExDmC,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,cACbF,EAAAxC,EAAAyC,cAAA,iBACOrD,EAAKwD,eACXJ,EAAAxC,EAAAyC,cAAA,WAFD,SAGQrD,EAAKyD,iBAIdL,EAAAxC,EAAAyC,cAAA,WAEAD,EAAAxC,EAAAyC,cAAA,mBAGAD,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,OAEdF,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,sBACdF,EAAAxC,EAAAyC,cAAA,qBACAD,EAAAxC,EAAAyC,cAAA,UAAQC,UAAW,eAAgBI,SAAU,SAAAtB,GAAC,OAAIa,EAAKd,aAAaC,KACnEgB,EAAAxC,EAAAyC,cAAA,UAAQM,UAAQ,EAACC,UAAQ,GAAzB,2BACCpD,EAAMqD,IAAI,SAACC,EAAKC,GAAN,OACVX,EAAAxC,EAAAyC,cAAA,UAAQW,IAAKD,EAAKzB,MAAOwB,GAAMA,OAIlCV,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,sBACdF,EAAAxC,EAAAyC,cAAA,sBACAD,EAAAxC,EAAAyC,cAAA,UAAQC,UAAW,eAAgBI,SAAU,SAAAtB,GAAC,OAAIa,EAAKV,cAAcH,KACpEgB,EAAAxC,EAAAyC,cAAA,UAAQM,UAAQ,EAACC,UAAQ,GAAzB,2BACCvD,EAAOwD,IAAI,SAACC,EAAKC,GAAN,OACXX,EAAAxC,EAAAyC,cAAA,UAAQW,IAAKD,EAAKzB,MAAOwB,EAAIvD,OAAQuD,EAAIxD,WAK7C8C,EAAAxC,EAAAyC,cAAA,WACuB,YAAtBjD,GAAmCgD,EAAAxC,EAAAyC,cAAA,yBAChClD,GAAqC,WAAtBC,GAClBgD,EAAAxC,EAAAyC,cAAA,SAAOC,UAAU,SAChBF,EAAAxC,EAAAyC,cAAA,SAAOC,UAAU,cACjBF,EAAAxC,EAAAyC,cAAA,UACCD,EAAAxC,EAAAyC,cAAA,MAAIY,MAAM,OAAV,WACAb,EAAAxC,EAAAyC,cAAA,MAAIY,MAAM,OAAV,WACAb,EAAAxC,EAAAyC,cAAA,MAAIY,MAAM,OAAV,aAGDb,EAAAxC,EAAAyC,cAAA,aACAD,EAAAxC,EAAAyC,cAAA,UACCD,EAAAxC,EAAAyC,cAAA,UAAKlD,EAAY+D,KACjBd,EAAAxC,EAAAyC,cAAA,UAAKlD,EAAYgE,KACjBf,EAAAxC,EAAAyC,cAAA,UAAKlD,EAAYiE,UA1Df,mBAzHmBC,aCwGdC,6MApGdxE,MAAQ,CACPyE,gBAAiB,CAChBvD,QAAS,CACRV,KAAM,SAGRkE,aAAc,OACdxE,KAAM,CACLyE,UAAW,OAIbhE,6BAAU,SAAAK,IAAA,IAAA2D,EAAA,OAAA9D,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgBC,IAAMC,IAAI,4BAD1B,OACHkD,EADGtD,EAAAQ,KACuD3B,KAEhET,EAAKqC,SAAS,CACb5B,KAAM,CACLyE,eALO,wBAAAtD,EAAAU,SAAAf,EAAApB,WAUVgF,gBAAkB,SAACtC,GAClB7C,EAAKqC,SAAS,CACb2C,gBAAiB,CAChBvD,QAAS2D,IAAEC,KAAMrF,EAAKO,MAAME,KAAKyE,UAAUI,OAAQ,SAACvC,EAAOwC,GAAR,QAAoBxC,GAASA,EAAMb,OAASW,EAAEC,OAAOC,QAAS,GAAI,CAAC,SACtHb,KAAMW,EAAEC,OAAOC,OAEhBkC,aAAc,YAIhBO,aAAe,SAAC3C,GACf7C,EAAKqC,SAAS,CACb4C,aAAcpC,EAAEC,OAAOC,4FAKxB5C,KAAKe,UACHqC,KAAK,kBAAMC,QAAQC,IAAI,eACvBgC,MAAM,SAAAC,GAAG,OAAIlC,QAAQmC,MAAMD,sCAGrB,IAAAhC,EAAAvD,KACD+E,EAAa/E,KAAKI,MAAME,KAAxByE,UADCzC,EAEgCtC,KAAKI,MAAtCyE,EAFCvC,EAEDuC,gBAAiBC,EAFhBxC,EAEgBwC,aACxB,OACCpB,EAAAxC,EAAAyC,cAAA,OAAKC,UAAW,aACfF,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,aACdF,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,aAAd,eAGAF,EAAAxC,EAAAyC,cAAA,6FAIDD,EAAAxC,EAAAyC,cAAA,iCAGAD,EAAAxC,EAAAyC,cAAA,WACAD,EAAAxC,EAAAyC,cAAA,UAAQC,UAAW,eAAgBI,SAAU,SAACtB,GAAD,OAAOa,EAAKyB,gBAAgBtC,KACxEgB,EAAAxC,EAAAyC,cAAA,UAAQM,UAAQ,EAACC,UAAQ,GAAzB,2BACCa,EAAUZ,IAAI,SAACC,EAAKC,GAAN,OAAgBD,EAC9BV,EAAAxC,EAAAyC,cAAA,UAAQW,IAAKD,EAAKzB,MAAOwB,EAAIrC,MAC3BqC,EAAIxD,MAEH,QAML8C,EAAAxC,EAAAyC,cAAA,aACIkB,EAAgBvD,QAAQmE,QAAUZ,EAAgBvD,QAAQmE,OAAOC,OAAS,GAC7EhC,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAAyE,SAAA,KACCjC,EAAAxC,EAAAyC,cAAA,8BAGAD,EAAAxC,EAAAyC,cAAA,UAAQf,MAAOkC,EAAclB,UAAW,eAAgBI,SAAU,SAACtB,GAAD,OAAOa,EAAK8B,aAAa3C,KAC1FgB,EAAAxC,EAAAyC,cAAA,UAAQf,MAAO,OAAQqB,UAAQ,EAACC,UAAQ,GAAxC,2BACCW,EAAgBvD,QAAQmE,OAAOtB,IAAI,SAAC5C,EAAM8C,GAAP,OACnCX,EAAAxC,EAAAyC,cAAA,UAAQW,IAAKD,EAAKzB,MAAOrB,GACvBA,OAONmC,EAAAxC,EAAAyC,cAAA,WACAD,EAAAxC,EAAAyC,cAAA,WAEmB,SAAjBmB,GAA4BpB,EAAAxC,EAAAyC,cAACiC,EAAD,CAAgBrE,KAAMuD,EAAcxD,QAASuD,YA9F7DF,aCMEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzC,EAAAxC,EAAAyC,cAACyC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.cda36e0d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass CurrentWeather extends Component {\n\tstate = {\n\t\tloaded: null,\n\t\tdata: null,\n\t\tcurrentMonth: null,\n\t\tcurrentYear: null,\n\t\thistoryData: null,\n\t\thistoryDataLoaded: null,\n\t\tmonths: [\n\t\t\t{\n\t\t\t\tname: 'january',\n\t\t\t\tcount: '01'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'february',\n\t\t\t\tcount: '02',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'march',\n\t\t\t\tcount: '03'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'april',\n\t\t\t\tcount: '04'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'may',\n\t\t\t\tcount: '05'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'june',\n\t\t\t\tcount: '06'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'july',\n\t\t\t\tcount: '07'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'august',\n\t\t\t\tcount: '08'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'september',\n\t\t\t\tcount: '09'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'october',\n\t\t\t\tcount: '10'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'november',\n\t\t\t\tcount: '11'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'december',\n\t\t\t\tcount: '12'\n\t\t\t}\n\t\t],\n\t\tyears: [],\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst arr = [];\n\t\tfor (let i = 1900; i < (new Date()).getFullYear() + 1;i++) {\n\t\t\tarr.push(i);\n\t\t}\n\t\tthis.state.years = arr.slice(0);\n\t}\n\n\tgetData = async () => {\n\t\tconst {country, city} = this.props;\n\t\tconst data = (await axios.get(`/api/v1/current/${country.code.toLowerCase()}/${city.toLowerCase()}`)).data;\n\t\tthis.setState({\n\t\t\tdata,\n\t\t\tloaded: true,\n\t\t});\n\t};\n\n\t// could use componentDidUpdate here and compare state but this is easier\n\tcheckIfShouldUpdate = async () => {\n\t\tconst {currentYear, currentMonth} = this.state;\n\t\tconst {city, country} = this.props;\n\t\tif (currentMonth && currentYear) {\n\t\t\tthis.setState({\n\t\t\t\thistoryDataLoaded: 'loading'\n\t\t\t});\n\t\t\tconst data = (await axios.get(`/api/v1/history/${country.code.toLowerCase()}/${city.toLowerCase()}/${currentYear}/${currentMonth}`)).data;\n\t\t\tthis.setState({\n\t\t\t\thistoryData: data,\n\t\t\t\thistoryDataLoaded: 'loaded',\n\t\t\t})\n\t\t}\n\t}\n\n\tonYearChange = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentYear: e.target.value\n\t\t}, () => {\n\t\t\tthis.checkIfShouldUpdate();\n\t\t});\n\t};\n\n\tonMonthChange = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentMonth: e.target.value\n\t\t}, () => {\n\t\t\tthis.checkIfShouldUpdate();\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getData()\n\t\t\t.then(() => console.log('mounted!'));\n\t}\n\n\trender() {\n\t\tconst {city, country} = this.props;\n\t\tconst {loaded, data, currentMonth, currentYear, years, months, historyData, historyDataLoaded} = this.state;\n\n\t\tif (!loaded) {\n\t\t\treturn 'loading..';\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={'card'}>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<h1 className=\"display-3\">\n\t\t\t\t\t\t{data.avgTemperature}&deg; in {country.country.name}, {city}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h5 className=\"text-muted\">\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tLow: {data.minTemperature}\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tHigh: {data.maxTemperature}\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</h5>\n\n\t\t\t\t\t<br/>\n\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tStats\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div className=\"row\">\n\n\t\t\t\t\t\t<div className=\"col-sm-12 col-md-6\">\n\t\t\t\t\t\t\t<label>Year</label>\n\t\t\t\t\t\t\t<select className={'form-control'} onChange={e => this.onYearChange(e)}>\n\t\t\t\t\t\t\t\t<option disabled selected> -- select an option --</option>\n\t\t\t\t\t\t\t\t{years.map((val, idx) => (\n\t\t\t\t\t\t\t\t\t<option key={idx} value={val}>{val}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-sm-12 col-md-6\">\n\t\t\t\t\t\t\t<label>Month</label>\n\t\t\t\t\t\t\t<select className={'form-control'} onChange={e => this.onMonthChange(e)}>\n\t\t\t\t\t\t\t\t<option disabled selected> -- select an option --</option>\n\t\t\t\t\t\t\t\t{months.map((val, idx) => (\n\t\t\t\t\t\t\t\t\t<option key={idx} value={val.count}>{val.name}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br/>\n\t\t\t\t\t{historyDataLoaded === 'loading' && <h4>loading..</h4>}\n\t\t\t\t\t{(!!historyData && historyDataLoaded === 'loaded') && (\n\t\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t\t<thead className=\"thead-dark\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Minimum</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Average</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Maximum</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{historyData.min}</td>\n\t\t\t\t\t\t\t\t<td>{historyData.avg}</td>\n\t\t\t\t\t\t\t\t<td>{historyData.max}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t)}\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CurrentWeather;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport CurrentWeather from \"./CurrentWeather\";\n\n\nclass App extends Component {\n\tstate = {\n\t\tselectedCountry: {\n\t\t\tcountry: {\n\t\t\t\tname: 'none'\n\t\t\t}\n\t\t},\n\t\tselectedCity: 'none',\n\t\tdata: {\n\t\t\tcountries: []\n\t\t}\n\t}\n\n\tgetData = async () => {\n\t\tconst countries = (await axios.get('/api/v1/countries-cities')).data;\n\n\t\tthis.setState({\n\t\t\tdata: {\n\t\t\t\tcountries\n\t\t\t},\n\t\t})\n\t};\n\n\tonCountryChange = (e) => {\n\t\tthis.setState({\n\t\t\tselectedCountry: {\n\t\t\t\tcountry: _.omit((this.state.data.countries.filter(((value, index) => !!value && value.code === e.target.value)))[0], ['code']),\n\t\t\t\tcode: e.target.value,\n\t\t\t},\n\t\t\tselectedCity: 'none',\n\t\t})\n\t};\n\n\tonCityChange = (e) => {\n\t\tthis.setState({\n\t\t\tselectedCity: e.target.value\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getData()\n\t\t\t.then(() => console.log('data set!'))\n\t\t\t.catch(err => console.error(err))\n\t}\n\n\trender() {\n\t\tconst {countries} = this.state.data;\n\t\tconst {selectedCountry, selectedCity} = this.state;\n\t\treturn (\n\t\t\t<div className={'container'}>\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t<h1 className=\"display-4\">\n\t\t\t\t\t\tWeather App\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOnly the country / city combination of: Netherlands, Amsterdam. Has been tested\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<label>\n\t\t\t\t\tCountry selector\n\t\t\t\t</label>\n\t\t\t\t<br/>\n\t\t\t\t<select className={'form-control'} onChange={(e) => this.onCountryChange(e)}>\n\t\t\t\t\t<option disabled selected> -- select an option --</option>\n\t\t\t\t\t{countries.map((val, idx) => !!val ? (\n\t\t\t\t\t\t<option key={idx} value={val.code}>\n\t\t\t\t\t\t\t{val.name}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t) : null)}\n\t\t\t\t</select>\n\n\t\t\t\t{/*{(!!selectedCountry && selectedCountry.country.name !== 'none') && <>*/}\n\t\t\t\t\t{/*<h1>{selectedCountry.country.name}</h1> </>}*/}\n\n\t\t\t\t<br/>\n\t\t\t\t{(!!selectedCountry.country.cities && selectedCountry.country.cities.length > 0) && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tCity selector\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<select value={selectedCity} className={'form-control'} onChange={(e) => this.onCityChange(e)}>\n\t\t\t\t\t\t\t<option value={'none'} disabled selected> -- select an option --</option>\n\t\t\t\t\t\t\t{selectedCountry.country.cities.map((city, idx) => (\n\t\t\t\t\t\t\t\t<option key={idx} value={city}>\n\t\t\t\t\t\t\t\t\t{city}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\n\t\t\t\t{(selectedCity !== 'none') && <CurrentWeather city={selectedCity} country={selectedCountry}/>}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}